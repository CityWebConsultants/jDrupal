var Drupal=Drupal||drupal_init();Drupal.sessid=null;Drupal.user=drupal_user_defaults();function dpm(a){a&&("object"===typeof a?console.log(JSON.stringify(a)):console.log(a))}function drupal_init(){return{settings:{site_path:"",base_path:"/",language_default:"und"}}}function drupal_user_defaults(){return{uid:"0",roles:{1:"anonymous user"}}}function function_exists(a){try{return"function"==eval("typeof "+a)}catch(b){alert("function_exists - "+b)}}
function http_status_code_title(a){try{var b="";switch(a){case 200:b="OK";break;case 401:b="Unauthorized";break;case 404:b="Not Found";break;case 406:b="Not Acceptable"}return b}catch(c){console.log("http_status_code_title - "+c)}}function in_array(a,b){return-1<b.indexOf(a)}function language_default(){try{return Drupal.settings.language_default}catch(a){console.log("language_default - "+a)}}function comment_load(a,b){try{entity_load("comment",a,b)}catch(c){console.log("comment_load - "+c)}}
function comment_save(a,b){try{entity_save("comment",null,a,b)}catch(c){console.log("comment_save - "+c)}}
function entity_assemble_data(a,b,c,e){try{a="";for(var d in c)if(c.hasOwnProperty(d))if("object"===typeof c[d])for(var f in c[d]){if(c[d].hasOwnProperty(f))for(var g in c[d][f])if(c[d][f].hasOwnProperty(g))for(var h in c[d][f][g])c[d][f][g].hasOwnProperty(h)&&(a+=d+"["+f+"]["+g+"]["+h+"]="+encodeURIComponent(c[d][f][g][h])+"&")}else a+=d+"="+encodeURIComponent(c[d])+"&";""!=a&&(a=a.substring(0,a.length-1));return a}catch(k){console.log("entity_assemble_data - "+k)}}
function entity_delete(a,b,c){try{var e=a+"_delete";if(function_exists(e))(0,window[e])(b,c);else console.log("WARNING: entity_delete - unsupported type: "+a)}catch(d){console.log("entity_delete - "+d)}}function entity_load(a,b,c){try{var e=a+"_retrieve";if(function_exists(e))(0,window[e])(b,c);else console.log("WARNING: entity_load - unsupported type: "+a)}catch(d){console.log("entity_load - "+d)}}
function entity_save(a,b,c,e){try{var d;switch(a){case "comment":d=c.cid?"comment_update":"comment_create";break;case "node":c.language||(c.language=language_default());d=c.nid?"node_update":"node_create";break;case "user":d=c.uid?"user_update":"user_create"}if(d&&function_exists(d))(0,window[d])(c,e);else console.log("WARNING: entity_save - unsupported type: "+a)}catch(f){console.log("entity_save - "+f)}}
function node_load(a,b){try{entity_load("node",a,b)}catch(c){console.log("node_load - "+c)}}function node_save(a,b){try{entity_save("node",a.type,a,b)}catch(c){console.log("node_save - "+c)}}function taxonomy_term_load(a,b){try{entity_load("taxonomy_term",a,b)}catch(c){console.log("taxonomy_term_load - "+c)}}function taxonomy_term_save(a,b){try{entity_save("taxonomy_term",null,a,b)}catch(c){console.log("taxonomy_term_save - "+c)}}
function taxonomy_vocabulary_load(a,b){try{entity_load("taxonomy_vocabulary",a,b)}catch(c){console.log("taxonomy_vocabulary_load - "+c)}}function taxonomy_vocabulary_save(a,b){try{entity_save("taxonomy_vocabulary",null,a,b)}catch(c){console.log("taxonomy_vocabulary_save - "+c)}}function user_load(a,b){try{entity_load("user",a,b)}catch(c){console.log("user_load - "+c)}}
function user_password(a){try{var b=10;a&&(b=a);a="";for(var c=0;c<b;c++)a+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz23456789".charAt(Math.floor(60*Math.random()));return a}catch(e){console.log("user_password - "+e)}}function user_save(a,b){try{entity_save("user",null,a,b)}catch(c){console.log("user_save - "+c)}}Drupal.services={};
Drupal.services.call=function(a){try{var b=new XMLHttpRequest,c=Drupal.settings.site_path+Drupal.settings.base_path+"?q="+Drupal.settings.endpoint+"/"+a.path,e=a.method.toUpperCase();console.log(e+": "+c);b.onload=function(d){if(4==b.readyState)if(d=b.status+" - "+http_status_code_title(b.status),200!=b.status){if(dpm(b),console.log(e+": "+c+" - "+d),b.responseText?console.log(b.responseText):dpm(b),"undefined"!==typeof a.error){var g=b.responseText;g||(g=d);a.error(b,b.status,g)}}else a.success(JSON.parse(b.responseText));
else console.log("request.readyState = "+b.readyState)};Drupal.services.csrf_token(e,c,b,{path:a.path,success:function(d){b.open(e,c,!0);"POST"==e&&b.setRequestHeader("Content-type","application/x-www-form-urlencoded");d&&(dpm("Adding token to header: "+d),b.setRequestHeader("X-CSRF-Token",d));"undefined"!==typeof a.data?("user/login.json"!=a.path&&console.log(a.data),b.send(a.data)):b.send(null)}})}catch(d){console.log("Drupal.services.call - error - "+d)}};
Drupal.services.csrf_token=function(a,b,c,e){try{var d=!1;if(in_array(a,["GET","HEAD","OPTIONS","TRACE"]))dpm(a+" - token not needed"),e.success(!1);else if(0==Drupal.user.uid&&"system/connect.json"!=e.path)dpm(a+" - anonymous token not needed"),e.success(!1);else if((d=window.localStorage.getItem("sessid"))&&dpm("grabbed token from local storage: "+d),!d&&Drupal.sessid&&(d=Drupal.sessid,dpm("Grabbed token from drupal: "+d)),d)dpm("previous token available and being used"),Drupal.sessid=d,e.success(d);
else{var f=new XMLHttpRequest,g=Drupal.settings.site_path+Drupal.settings.base_path+"?q=services/session/token";f.onload=function(a){4==f.readyState?(a=f.status+" - "+http_status_code_title(f.status),console.log("TOKEN REQUEST COMPLETE: "+a),200!=f.status?(console.log(g+" - "+a),console.log(f.responseText)):(dpm(f.responseText),d=f.responseText,dpm("Grabbed a new token, saving it to local storage: "+d),window.localStorage.setItem("sessid",d),Drupal.sessid=d,e.success(d))):console.log("token_request.readyState = "+
f.readyState)};f.open("GET",g,!0);dpm(g+" - previous token not available, grabbing one...");f.send(null)}}catch(h){console.log("Drupal.services.call - error - "+h)}};function comment_create(a,b){try{b.method="POST",b.path="comment.json",entity_create("comment",null,a,b)}catch(c){console.log("comment_create - "+c)}}function comment_retrieve(a,b){try{b.method="GET",b.path="comment/"+a+".json",entity_retrieve("comment",a,b)}catch(c){console.log("comment_retrieve - "+c)}}
function comment_update(a,b){try{b.method="PUT",b.path="comment/"+a.cid+".json",entity_update("comment",null,a,b)}catch(c){console.log("comment_update - "+c)}}function entity_create(a,b,c,e){try{Drupal.services.call({method:e.method,path:e.path,data:entity_assemble_data(a,b,c,e),success:function(a){e.success&&e.success(a)},error:function(a,b,c){e.error&&e.error(a,b,c)}})}catch(d){console.log("entity_create - "+d)}}
function entity_retrieve(a,b,c){try{Drupal.services.call({method:c.method,path:c.path,success:function(a){c.success&&c.success(a)},error:function(a,b,e){c.error&&c.error(a,b,e)}})}catch(e){console.log("entity_retrieve - "+e)}}function entity_update(a,b,c,e){try{Drupal.services.call({method:e.method,path:e.path,data:entity_assemble_data(a,b,c,e),success:function(a){e.success&&e.success(a)},error:function(a,b,c){e.error&&e.error(a,b,c)}})}catch(d){console.log("entity_update - "+d)}}
function node_create(a,b){try{b.method="POST",b.path="node.json",entity_create("node",a.type,a,b)}catch(c){console.log("node_create - "+c)}}function node_retrieve(a,b){try{b.method="GET",b.path="node/"+a+".json",entity_retrieve("node",a,b)}catch(c){console.log("node_retrieve - "+c)}}function node_update(a,b){try{b.method="PUT",b.path="node/"+a.nid+".json",entity_update("node",a.type,a,b)}catch(c){console.log("node_update - "+c)}}
function node_delete(a,b){try{Drupal.services.call({method:"DELETE",path:"node/"+a+".json",success:function(a){b.success&&b.success(a)},error:function(a,c,f){b.error&&b.error(a,c,f)}})}catch(c){console.log("node_delete - "+c)}}function system_connect(a){try{Drupal.services.call({method:"POST",path:"system/connect.json",success:function(b){Drupal.user=b.user;a.success&&a.success(b)},error:function(b,e,d){a.error&&a.error(b,e,d)}})}catch(b){console.log("system_connect - "+b)}}
function taxonomy_term_create(a,b){try{b.method="POST",b.path="taxonomy_term.json",entity_create("taxonomy_term",null,a,b)}catch(c){console.log("taxonomy_term_create - "+c)}}function taxonomy_term_retrieve(a,b){try{b.method="GET",b.path="taxonomy_term/"+a+".json",entity_retrieve("taxonomy_term",a,b)}catch(c){console.log("taxonomy_term_retrieve - "+c)}}
function taxonomy_term_update(a,b){try{b.method="PUT",b.path="taxonomy_term/"+a.cid+".json",entity_update("taxonomy_term",null,a,b)}catch(c){console.log("taxonomy_term_update - "+c)}}function taxonomy_vocabulary_create(a,b){try{b.method="POST",b.path="taxonomy_vocabulary.json",entity_create("taxonomy_vocabulary",null,a,b)}catch(c){console.log("taxonomy_vocabulary_create - "+c)}}
function taxonomy_vocabulary_retrieve(a,b){try{b.method="GET",b.path="taxonomy_vocabulary/"+a+".json",entity_retrieve("taxonomy_vocabulary",a,b)}catch(c){console.log("taxonomy_vocabulary_retrieve - "+c)}}function taxonomy_vocabulary_update(a,b){try{b.method="PUT",b.path="taxonomy_vocabulary/"+a.cid+".json",entity_update("taxonomy_vocabulary",null,a,b)}catch(c){console.log("taxonomy_vocabulary_update - "+c)}}
function user_create(a,b){try{b.method="POST",b.path="user.json",entity_create("user",null,a,b)}catch(c){console.log("user_create - "+c)}}function user_retrieve(a,b){try{b.method="GET",b.path="user/"+a+".json",entity_retrieve("user",a,b)}catch(c){console.log("user_retrieve - "+c)}}
function user_register(a,b){try{dpm(a),Drupal.services.call({method:"POST",path:"user/register.json",data:entity_assemble_data("user",null,a,b),success:function(a){b.success&&b.success(a)},error:function(a,c,f){406==c&&console.log("user_register - Already logged in, cannot register user!");b.error&&b.error(a,c,f)}})}catch(c){console.log("user_retrieve - "+c)}}
function user_update(a,b){try{b.method="PUT",b.path="user/"+a.uid+".json",entity_update("user",null,a,b)}catch(c){console.log("user_update - "+c)}}
function user_login(a){try{Drupal.services.call({method:"POST",path:"user/login.json",data:"username="+encodeURIComponent(a.name)+"&password="+encodeURIComponent(a.pass),success:function(b){Drupal.user=b.user;var e=new XMLHttpRequest,d=Drupal.settings.site_path+Drupal.settings.base_path+"?q=services/session/token";e.onload=function(f){4==e.readyState?(f=e.status+" - "+http_status_code_title(e.status),200!=e.status?(console.log("user_login - "+d+" - "+f),console.log(e.responseText)):(token=e.responseText,
window.localStorage.setItem("sessid",token),Drupal.sessid=token,dpm("got new token after user login: "+token),a.success&&a.success(b))):console.log("user_login token_request.readyState = "+e.readyState)};e.open("GET",d,!0);dpm("grabbing new token after user login...");e.send(null)},error:function(b,e,d){a.error&&a.error(b,e,d)}})}catch(b){console.log("user_login - "+b)}}
function user_logout(a){try{Drupal.services.call({method:"POST",path:"user/logout.json",success:function(b){Drupal.user=drupal_user_defaults();Drupal.sessid=null;window.localStorage.removeItem("sessid");a.success&&a.success(b)},error:function(b,e,d){a.error&&a.error(b,e,d)}})}catch(b){console.log("user_login - "+b)}};
