var Drupal=Drupal||drupal_init();Drupal.sessid=null;Drupal.csrf_token=!1;Drupal.user=drupal_user_defaults();function dpm(a){try{a&&("object"===typeof a?console.log(JSON.stringify(a)):console.log(a))}catch(b){console.log("dpm - "+b)}}function drupal_init(){return{settings:{site_path:"",base_path:"/",language_default:"und"}}}function drupal_user_defaults(){return{uid:"0",roles:{1:"anonymous user"}}}
function function_exists(a){try{return"function"==eval("typeof "+a)}catch(b){alert("function_exists - "+b)}}function http_status_code_title(a){try{var b="";switch(a){case 200:b="OK";break;case 401:b="Unauthorized";break;case 404:b="Not Found";break;case 406:b="Not Acceptable";break;case 500:b="Internal Server Error"}return b}catch(c){console.log("http_status_code_title - "+c)}}function in_array(a,b){try{return-1<b.indexOf(a)}catch(c){console.log("in_array - "+c)}}
function language_default(){try{return Drupal.settings.language_default}catch(a){console.log("language_default - "+a)}}function comment_load(a,b){try{entity_load("comment",a,b)}catch(c){console.log("comment_load - "+c)}}function comment_save(a,b){try{entity_save("comment",null,a,b)}catch(c){console.log("comment_save - "+c)}}
function entity_assemble_data(a,b,c,e){try{a="";for(var d in c)if(c.hasOwnProperty(d))if("object"===typeof c[d])for(var f in c[d]){if(c[d].hasOwnProperty(f))for(var g in c[d][f])if(c[d][f].hasOwnProperty(g))for(var h in c[d][f][g])c[d][f][g].hasOwnProperty(h)&&(a+=d+"["+f+"]["+g+"]["+h+"]="+encodeURIComponent(c[d][f][g][h])+"&")}else a+=d+"="+encodeURIComponent(c[d])+"&";""!=a&&(a=a.substring(0,a.length-1));return a}catch(k){console.log("entity_assemble_data - "+k)}}
function entity_delete(a,b,c){try{var e=a+"_delete";if(function_exists(e))(0,window[e])(b,c);else console.log("WARNING: entity_delete - unsupported type: "+a)}catch(d){console.log("entity_delete - "+d)}}function entity_load(a,b,c){try{var e=a+"_retrieve";if(function_exists(e))(0,window[e])(b,c);else console.log("WARNING: entity_load - unsupported type: "+a)}catch(d){console.log("entity_load - "+d)}}
function entity_primary_key(a){try{var b;switch(a){case "comment":b="cid";break;case "file":b="fid";break;case "node":b="nid";break;case "taxonomy_term":b="tid";break;case "taxonomy_vocabulary":b="vid";break;case "user":b="uid";break;default:console.log("entity_primary_key - unsupported entity type ("+a+")")}return b}catch(c){console.log("entity_primary_key - "+c)}}
function entity_save(a,b,c,e){try{var d;switch(a){case "comment":d=c.cid?"comment_update":"comment_create";break;case "node":c.language||(c.language=language_default());d=c.nid?"node_update":"node_create";break;case "user":d=c.uid?"user_update":"user_create";break;case "taxonomy_term":d=c.tid?"taxonomy_term_update":"taxonomy_term_create";break;case "taxonomy_vocabulary":d=c.vid?"taxonomy_vocabulary_update":"taxonomy_vocabulary_create"}if(d&&function_exists(d))(0,window[d])(c,e);else console.log("WARNING: entity_save - unsupported type: "+
a)}catch(f){console.log("entity_save - "+f)}}function node_load(a,b){try{entity_load("node",a,b)}catch(c){console.log("node_load - "+c)}}function node_save(a,b){try{entity_save("node",a.type,a,b)}catch(c){console.log("node_save - "+c)}}function taxonomy_term_load(a,b){try{entity_load("taxonomy_term",a,b)}catch(c){console.log("taxonomy_term_load - "+c)}}function taxonomy_term_save(a,b){try{entity_save("taxonomy_term",null,a,b)}catch(c){console.log("taxonomy_term_save - "+c)}}
function taxonomy_vocabulary_load(a,b){try{entity_load("taxonomy_vocabulary",a,b)}catch(c){console.log("taxonomy_vocabulary_load - "+c)}}function taxonomy_vocabulary_save(a,b){try{entity_save("taxonomy_vocabulary",null,a,b)}catch(c){console.log("taxonomy_vocabulary_save - "+c)}}function user_load(a,b){try{entity_load("user",a,b)}catch(c){console.log("user_load - "+c)}}function user_save(a,b){try{entity_save("user",null,a,b)}catch(c){console.log("user_save - "+c)}}
function user_password(a){try{var b=10;a&&(b=a);a="";for(var c=0;c<b;c++)a+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz23456789".charAt(Math.floor(60*Math.random()));return a}catch(e){console.log("user_password - "+e)}}Drupal.services={};
Drupal.services.call=function(a){try{if(a.debug=!1,services_ready()){var b=new XMLHttpRequest,c=Drupal.settings.site_path+Drupal.settings.base_path+"?q="+Drupal.settings.endpoint+"/"+a.path,e=a.method.toUpperCase();console.log(e+": "+c);b.onload=function(d){try{if(4==b.readyState){var g=b.status+" - "+http_status_code_title(b.status);if(200==b.status)a.success(JSON.parse(b.responseText));else if(dpm(b),console.log(e+": "+c+" - "+g),b.responseText?console.log(b.responseText):dpm(b),"undefined"!==typeof a.error){var h=
b.responseText;h||(h=g);a.error(b,b.status,h)}}else console.log("Drupal.services.call - request.readyState = "+b.readyState)}catch(k){console.log("Drupal.services.call - onload - "+k)}};services_get_csrf_token({debug:a.debug,success:function(d){try{b.open(e,c,!0),"POST"==e?b.setRequestHeader("Content-type","application/x-www-form-urlencoded"):"PUT"==e&&b.setRequestHeader("Content-type","application/json"),d&&b.setRequestHeader("X-CSRF-Token",d),"undefined"!==typeof a.data?("user/login.json"!=a.path&&
("object"===typeof a.data?console.log(JSON.stringify(a.data)):console.log(a.data)),b.send(a.data)):b.send(null)}catch(g){console.log("Drupal.services.call - services_get_csrf_token - success - "+message)}},error:function(c,b,d){try{console.log("Drupal.services.call - services_get_csrf_token - "+d),a.error&&a.error(c,b,d)}catch(e){console.log("Drupal.services.call - services_get_csrf_token - error - "+d)}}})}else a.error(null,null,"Set the site_path and endpoint on Drupal.settings!")}catch(d){console.log("Drupal.services.call - error - "+
d)}};
function services_get_csrf_token(a){try{var b;a.reset&&(Drupal.sessid=null);Drupal.sessid&&(b=Drupal.sessid,a.debug&&dpm("Loaded token from Drupal JSON object!"));if(b)a.success&&a.success(b);else{var c=new XMLHttpRequest,e=Drupal.settings.site_path+Drupal.settings.base_path+"?q=services/session/token";c.onload=function(d){try{if(4==c.readyState){var g=c.status+" - "+http_status_code_title(c.status);200!=c.status?(console.log(e+" - "+g),console.log(c.responseText)):(a.debug&&dpm("Grabbed token from Drupal site!"),b=
c.responseText,Drupal.sessid=b,a.success(b))}else console.log("services_get_csrf_token - readyState - "+c.readyState)}catch(h){console.log("services_get_csrf_token - token_request. onload - "+h)}};c.open("GET",e,!0);c.send(null)}}catch(d){console.log("services_get_csrf_token - "+d)}}
function services_ready(){try{var a=!0;""==Drupal.settings.site_path&&(a=!1,console.log("jDrupal's Drupal.settings.site_path is not set!"));""==Drupal.settings.endpoint&&(a=!1,console.log("jDrupal's Drupal.settings.endpoint is not set!"));return a}catch(b){console.log("services_ready - "+b)}}function comment_create(a,b){try{entity_create("comment",null,a,b)}catch(c){console.log("comment_create - "+c)}}
function comment_retrieve(a,b){try{entity_retrieve("comment",a,b)}catch(c){console.log("comment_retrieve - "+c)}}function comment_update(a,b){try{entity_update("comment",null,a,b)}catch(c){console.log("comment_update - "+c)}}function comment_delete(a,b){try{entity_delete("comment",a,b)}catch(c){console.log("comment_delete - "+c)}}function comment_index(a,b){try{entity_index("comment",a,b)}catch(c){console.log("comment_index - "+c)}}
function entity_create(a,b,c,e){try{Drupal.services.call({method:"POST",path:a+".json",data:entity_assemble_data(a,b,c,e),success:function(a){try{e.success&&e.success(a)}catch(c){console.log("entity_create - success - "+c)}},error:function(a,c,b){try{e.error&&e.error(a,c,b)}catch(d){console.log("entity_create - error - "+d)}}})}catch(d){console.log("entity_create - "+d)}}
function entity_retrieve(a,b,c){try{Drupal.services.call({method:"GET",path:a+"/"+b+".json",success:function(a){try{c.success&&c.success(a)}catch(b){console.log("entity_retrieve - success - "+b)}},error:function(a,b,e){try{c.error&&c.error(a,b,e)}catch(h){console.log("entity_retrieve - error - "+h)}}})}catch(e){console.log("entity_retrieve - "+e)}}
function entity_update(a,b,c,e){try{var d=_entity_wrap(a,c),f=entity_primary_key(a);Drupal.services.call({method:"PUT",path:a+"/"+c[f]+".json",data:JSON.stringify(d),success:function(a){try{e.success&&e.success(a)}catch(b){console.log("entity_update - success - "+b)}},error:function(a,b,c){try{e.error&&e.error(a,b,c)}catch(d){console.log("entity_update - error - "+d)}}})}catch(g){console.log("entity_update - "+g)}}
function entity_delete(a,b,c){try{Drupal.services.call({method:"DELETE",path:a+"/"+b+".json",success:function(a){try{c.success&&c.success(a)}catch(b){console.log("entity_delete - success - "+b)}},error:function(a,b,e){try{c.error&&c.error(a,b,e)}catch(h){console.log("entity_delete - error - "+h)}}})}catch(e){console.log("entity_delete - "+e)}}
function entity_index(a,b,c){try{var e;"object"===typeof b?e=entity_index_build_query_string(b):"string"===typeof b&&(e=b);Drupal.services.call({method:"GET",path:a+".json"+(e?"&"+e:""),success:function(a){try{c.success&&c.success(a)}catch(b){console.log("entity_index - success - "+b)}},error:function(a,b,d){try{c.error&&c.error(a,b,d)}catch(e){console.log("entity_index - error - "+e)}}})}catch(d){console.log("entity_index - "+d)}}
function entity_index_build_query_string(a){try{var b="";if(!a)return b;if(a.fields){for(var c="",e=0;e<a.fields.length;e++)c+=encodeURIComponent(a.fields[e])+",";""!=c&&(c="fields="+c.substring(0,c.length-1),b+=c+"&")}if(a.parameters){var c="",d;for(d in a.parameters)if(a.parameters.hasOwnProperty(d))var f=encodeURIComponent(d),g=encodeURIComponent(a.parameters[d]),c=c+("parameters["+f+"]="+g+"&");""!=c&&(c=c.substring(0,c.length-1),b+=c+"&")}"undefined"!==typeof a.page&&(b+="page="+encodeURIComponent(a.page)+
"&");"undefined"!==typeof a.page_size&&(b+="page_size="+encodeURIComponent(a.page_size)+"&");return b.substring(0,b.length-1)}catch(h){console.log("entity_index_build_query_string - "+h)}}function _entity_wrap(a,b){try{var c={};"taxonomy_term"==a||"taxonomy_vocabulary"==a||"user"==a?c=b:c[a]=b;return c}catch(e){console.log("_entity_wrap - "+e)}}function node_create(a,b){try{entity_create("node",a.type,a,b)}catch(c){console.log("node_create - "+c)}}
function node_retrieve(a,b){try{entity_retrieve("node",a,b)}catch(c){console.log("node_retrieve - "+c)}}function node_update(a,b){try{entity_update("node",a.type,a,b)}catch(c){console.log("node_update - "+c)}}function node_delete(a,b){try{entity_delete("node",a,b)}catch(c){console.log("node_delete - "+c)}}function node_index(a,b){try{entity_index("node",a,b)}catch(c){console.log("node_index - "+c)}}
function system_connect(a){try{var b={method:"POST",path:"system/connect.json",success:function(b){try{Drupal.user=b.user,a.success&&a.success(b)}catch(c){console.log("system_connect - success - "+c)}},error:function(b,c,f){try{a.error&&a.error(b,c,f)}catch(g){console.log("system_connect - error - "+g)}}};Drupal.csrf_token?(a.debug&&console.log("Token already available."),Drupal.services.call(b)):services_get_csrf_token({success:function(c){try{a.debug&&console.log("Grabbed new token."),Drupal.csrf_token=
!0,Drupal.services.call(b)}catch(d){console.log("system_connect - services_csrf_token - success - "+message)}},error:function(b,c,f){try{a.error&&a.error(b,c,f)}catch(g){console.log("system_connect - services_csrf_token - error - "+f)}}})}catch(c){console.log("system_connect - "+c)}}function taxonomy_term_create(a,b){try{entity_create("taxonomy_term",null,a,b)}catch(c){console.log("taxonomy_term_create - "+c)}}
function taxonomy_term_retrieve(a,b){try{entity_retrieve("taxonomy_term",a,b)}catch(c){console.log("taxonomy_term_retrieve - "+c)}}function taxonomy_term_update(a,b){try{entity_update("taxonomy_term",null,a,b)}catch(c){console.log("taxonomy_term_update - "+c)}}function taxonomy_term_delete(a,b){try{entity_delete("taxonomy_term",a,b)}catch(c){console.log("taxonomy_term_delete - "+c)}}
function taxonomy_term_index(a,b){try{entity_index("taxonomy_term",a,b)}catch(c){console.log("taxonomy_term_index - "+c)}}function taxonomy_vocabulary_create(a,b){try{!a.machine_name&&a.name&&(a.machine_name=a.name.toLowerCase().replace(" ","_")),entity_create("taxonomy_vocabulary",null,a,b)}catch(c){console.log("taxonomy_vocabulary_create - "+c)}}function taxonomy_vocabulary_retrieve(a,b){try{entity_retrieve("taxonomy_vocabulary",a,b)}catch(c){console.log("taxonomy_vocabulary_retrieve - "+c)}}
function taxonomy_vocabulary_update(a,b){try{a.machine_name&&""!=a.machine_name?entity_update("taxonomy_vocabulary",null,a,b):(console.log("taxonomy_vocabulary_update - missing machine_name"),b.error&&b.error(null,406,"taxonomy_vocabulary_update - missing machine_name"))}catch(c){console.log("taxonomy_vocabulary_update - "+c)}}function taxonomy_vocabulary_delete(a,b){try{entity_delete("taxonomy_vocabulary",a,b)}catch(c){console.log("taxonomy_vocabulary_delete - "+c)}}
function taxonomy_vocabulary_index(a,b){try{entity_index("taxonomy_vocabulary",a,b)}catch(c){console.log("taxonomy_vocabulary_index - "+c)}}function user_create(a,b){try{entity_create("user",null,a,b)}catch(c){console.log("user_create - "+c)}}function user_retrieve(a,b){try{entity_retrieve("user",a,b)}catch(c){console.log("user_retrieve - "+c)}}function user_update(a,b){try{entity_update("user",null,a,b)}catch(c){console.log("user_update - "+c)}}
function user_delete(a,b){try{entity_delete("user",a,b)}catch(c){console.log("user_delete - "+c)}}function user_index(a,b){try{entity_index("user",a,b)}catch(c){console.log("user_index - "+c)}}
function user_register(a,b){try{Drupal.services.call({method:"POST",path:"user/register.json",data:entity_assemble_data("user",null,a,b),success:function(a){try{b.success&&b.success(a)}catch(c){console.log("user_register - success - "+c)}},error:function(a,c,f){try{406==c&&console.log("user_register - Already logged in, cannot register user!"),b.error&&b.error(a,c,f)}catch(g){console.log("user_register - error - "+g)}}})}catch(c){console.log("user_retrieve - "+c)}}
function user_login(a,b,c){try{var e=!0;a&&"string"===typeof a||(e=!1,console.log("user_login - invalid name"));b&&"string"===typeof b||(e=!1,console.log("user_login - invalid pass"));e?Drupal.services.call({method:"POST",path:"user/login.json",data:"username="+encodeURIComponent(a)+"&password="+encodeURIComponent(b),success:function(a){try{Drupal.user=a.user,Drupal.sessid=null,services_get_csrf_token({success:function(b){try{c.success&&c.success(a)}catch(d){console.log("user_login - services_get_csrf_token - success - "+
d)}},error:function(a,b,d){console.log("user_login - services_get_csrf_token - error - "+d);c.error&&c.error(a,b,d)}})}catch(b){console.log("user_login - success - "+b)}},error:function(a,b,d){try{c.error&&c.error(a,b,d)}catch(e){console.log("user_login - error - "+e)}}}):c.error&&c.error(null,406,"user_login - bad input")}catch(d){console.log("user_login - "+d)}}
function user_logout(a){try{Drupal.services.call({method:"POST",path:"user/logout.json",success:function(b){try{Drupal.user=drupal_user_defaults(),Drupal.sessid=null,system_connect({success:function(d){try{a.success&&a.success(b)}catch(e){console.log("user_logout - system_connect - success - "+e)}},error:function(b,c,e){try{a.error&&a.error(b,c,e)}catch(h){console.log("user_logout - system_connect - error - "+h)}}})}catch(e){console.log("user_logout - success - "+e)}},error:function(b,e,d){try{a.error&&
a.error(b,e,d)}catch(f){console.log("user_logout - error - "+f)}}})}catch(b){console.log("user_login - "+b)}};
